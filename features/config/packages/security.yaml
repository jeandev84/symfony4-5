security:
    encoders:
        App\Entity\SecurityUser:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\SecurityUser
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: lazy
            provider: app_user_provider

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication
            # https://symfony.com/doc/4.4/security.html#3a-authentication-firewalls
            # https://symfony.com/doc/4.4/security/form_login.html
            # https://symfony.com/doc/4.4/security/form_login_setup.html
            form_login:
                login_path: auth.user.login
                check_path: /auth/user/login
                # html input fields name required
                username_parameter: 'email'
                password_parameter: 'password'
                # https://symfony.com/doc/4.4/security/form_login.html#csrf-protection-in-login-forms
                csrf_token_generator: security.csrf.token_manager


            # Logout section [target: redirect to "home" page after logout]
            logout:
                path: /logout
                target: home

            # Remember me cookie
            # if [path: /home] remember_me will be applied only in "/home"
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800 # 1 week in seconds
                # always_remember_me: true
                path: /

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
